#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
using namespace std;

class Solution
{
public:
    // waste of space in this approach
    
    //  int maxCount(vector<int> &banned, int n, int maxSum)
    //  {
    //      int size = banned.size();
    //      vector<bool> map(n, 0);
    //      for (int i = 0; i < size; i++)
    //      {
    //          if (banned[i] <= n && banned[i] > 0)
    //              map[banned[i] - 1] = 1;
    //      }

    //     int sum = 0;
    //     int count = 0;
    //     for (int i = 1; i <= n; i++)
    //     {
    //         if (map[i] == 0)
    //         {
    //             if ((sum + i) < maxSum)
    //             {
    //                 sum += i;
    //                 count++;
    //             }
    //             else
    //                 break;
    //         }
    //     }
    //     return count;
    // }

    int maxCount(vector<int> &banned, int n, int maxSum)
    {
        unordered_set<int> map(banned.begin(), banned.end());
        int sum = 0;
        int count = 0;
        for (int i = 1; i <= n; i++)
        {
            if (map.count(i))
                continue;
            if ((sum + i) > maxSum)
                break;
            sum += i;
            count++;
        }
        return count;
    }
};

int main()
{
    vector<int> banned = {2107, 3033, 2919, 733, 3090, 52, 667, 2582, 1504, 1107, 549, 2050, 2952, 550, 1710, 924, 2587, 2092, 158, 1023, 3015, 2180, 489, 1491, 1700, 1833, 2865, 2856, 670, 2989, 2307, 2725, 1680, 2746, 958, 2802, 2735, 2959, 1759, 2470, 720, 2068, 545, 258, 1510, 2112, 1546, 1147, 1260, 2907, 2586, 471, 2549, 2269, 1554, 2046, 626, 705, 1834, 1603, 2456, 1943, 2617, 2023, 1086, 1529, 279, 2990, 1697, 2648, 1784, 1324, 1863, 251, 2745, 365, 2500, 1341, 633, 1625, 542, 109, 1967, 48, 183, 1129, 3042, 1684, 2663, 3102, 500, 2312, 1407, 421, 2612, 1349, 790, 816, 184, 2295, 2105, 1095, 116, 3039, 3011, 1401, 2789, 1466, 2113, 846, 1283, 1355, 2171, 12, 864, 1218, 963, 1699, 2362, 2792, 2463, 2084, 178, 925, 606, 2318, 2477, 1408, 722, 1825, 1338, 299, 1850, 2061, 767, 1647, 1792, 2035, 283, 510, 947, 1269, 2233, 335, 1542, 2590, 499, 1466, 1941, 373, 2060, 2788, 2202, 442, 318, 41, 2929, 2361, 2204, 1307, 727, 2015, 1833, 1191, 291, 2661, 2812, 1550, 2419, 11, 1495, 2832, 1935, 264, 1767, 312, 1114, 719, 2782, 1169, 2713, 1155, 1721, 1649, 1445, 3098, 1590, 2747, 911, 54, 1214, 2367, 1248, 676, 2341, 2186, 2208, 1201, 2821, 1840, 158, 1818, 770, 1625, 1647, 531, 2002, 2154, 2872, 1854, 456, 1155, 1792, 1271, 133, 2283, 8, 1767, 2873, 2187, 849, 2724, 2, 102, 2449, 1188, 2076, 931, 2508, 1905, 2396, 1489, 2931, 2590, 982, 191, 1004, 542, 2741, 805, 2881, 1260, 2917, 2400, 3073, 25, 1751, 298, 1357, 1297, 343, 827, 2267, 765, 2393, 1684, 1054, 792, 462, 1901, 2418, 2232, 2553, 1643, 1279, 2121, 3090, 1139, 1996, 144, 953, 2752, 459, 2705, 592, 1556, 808, 264, 886, 2871, 379, 2506, 1993, 1310, 2546, 2355, 1349, 725, 1904, 1481, 2480, 473, 2821, 2352, 712, 1938, 391, 1739, 1343, 474, 3030, 311, 1889, 2547, 315, 600, 601, 1847, 614, 2461, 516, 1309, 2959, 2270, 2183, 1241, 1786, 838, 1362, 2925, 2606, 2596, 794, 785, 1670, 1921, 1360, 2749, 41, 2197, 2786, 409, 1148, 2019, 92, 1887, 2734, 2466, 1068, 2218, 2990, 2595, 1968, 3006, 2321, 2800, 2229, 179, 1373, 1008, 1375, 2246, 1895, 2039, 206, 440, 1412, 3023, 1184, 421, 131, 31, 2985, 2204, 19, 1330, 2396, 1017, 3045, 2689, 210, 2251, 254, 2079, 3011, 2341, 1192, 2111, 2909, 110, 47, 2644, 2541, 2964, 480, 13, 1358, 2896, 312, 1220, 1453, 2038, 935, 2702, 276, 1742, 2751, 2114, 2217, 2189, 1532, 75, 101, 1535, 2849, 936, 1199, 2657, 876, 1285, 2145, 902, 2223, 1886, 217, 1905, 2632, 1660, 816, 2026, 5, 2458, 2088, 524, 1729, 125, 481, 286, 1173, 2921, 2216, 1004, 747, 1526, 352, 2390, 2710, 405, 2952, 2458, 1441, 1247, 1763, 2318, 86, 1831, 2662, 2081, 3058, 2567, 2933, 776, 857, 1725, 3097, 558, 3081, 1498, 2595, 122, 1814, 913, 593, 2901, 2670, 2884, 2071, 2559, 2572, 1679, 3108, 1411, 219, 686, 2024, 590, 1235, 1313, 2225, 2389, 1726, 2347, 871, 1561, 350, 1667, 1026, 1916, 1460, 592, 1071, 797, 1767, 2936, 715, 23, 2994, 1432, 1315, 1708, 1230, 379, 305, 924, 1836, 397, 61, 2576, 2257, 434, 1673, 278, 969, 1259, 992, 1075, 11, 401, 1827, 2491, 958, 2024, 2959, 1879, 514, 2036, 2770, 48, 2910, 288, 2986, 2284, 1630, 2461, 2493, 1527, 560, 2678, 1343, 2147, 1536, 779, 734, 927, 2206, 2860, 1443, 3062, 2414, 54, 2954, 2073, 1526, 515, 1173, 2854, 1386, 2440, 1129, 986, 1675, 1709, 2643, 1629, 2946, 3072, 2193, 2285, 2793, 2988, 474, 1251, 675, 1482, 960, 2993, 2492, 2644, 1103, 2886, 636, 2510, 3024, 1727, 1059, 2113, 1837, 2389, 355, 769, 768, 1396, 426, 300, 2699, 1199, 1755, 2813, 351, 2912, 2360, 1218, 2106, 1646, 2024, 2963, 1579, 2965, 1295, 80, 2498, 1926, 1765, 771, 1155, 1978, 401, 2822, 445, 736, 531, 2293, 124, 980, 125, 2318, 1758, 2788, 2020, 985, 1357, 1201, 2581, 160, 2875, 626, 804, 2098, 349, 619, 2854, 2634, 917, 1043, 88, 3002, 282, 1609, 1480, 466, 943, 1677, 2076, 2169, 1748, 834, 1227, 1359, 2299, 3064, 743, 1967, 571, 2154, 2413, 511, 2884, 2800, 2060, 2713, 2275, 3015, 2908, 2731, 811, 731, 1629, 1388, 1416, 2286, 1719, 1279, 1278, 2261, 2210, 2794, 1004, 2813, 2849, 234, 2379, 49, 2850, 480, 1825, 1962, 1088, 2822, 182, 2655, 907, 1438, 2180, 283, 984, 2340, 1980, 1484, 610, 715, 1330, 1402, 100, 1302, 2120, 251, 1481, 2566, 535, 7, 1064, 3031, 469, 1779, 261, 2939, 221, 1483, 1364, 1434, 1891, 489, 832, 2981, 690, 2213, 1548, 1099, 3081, 786, 4, 188, 1646, 945, 1031, 374, 507, 1984, 3011, 2704, 1749, 1863, 1187, 2199, 2145, 381, 99, 550, 1944, 2111, 1235, 2891, 2603, 1384, 901, 2047, 593, 491, 332, 2508, 601, 2860, 1831, 1055, 1249, 2867, 3108, 1803, 1438, 22, 2521, 2377, 970, 1177, 2856, 450, 3050, 788, 1263, 3005, 31, 838, 2810, 420, 1452, 2304, 1667, 1588, 2951, 3020, 143, 1770, 1405, 2515, 638, 1241, 1395, 2212, 277, 71, 279, 2134, 1747, 1958, 337, 551, 1185, 348, 1263, 665, 1374, 72, 2821, 144, 442, 2603, 604, 392, 529, 1695, 1092, 3076, 2332, 3049, 2763, 845, 1676, 2274, 1997, 565, 1108, 2399, 1732, 961, 212, 1963, 2097, 804, 972, 734, 297, 2313, 2335, 145, 1557, 1808, 2406, 1106, 2577, 2306, 1521, 1710, 628, 2922, 1190, 2104, 481, 2467, 3090, 2924, 2823, 612, 581, 1208, 2012, 2039, 920, 232, 1296, 2604, 2471, 1782, 1949, 2436, 2857, 11, 2984, 10, 883, 1932, 1845, 1268, 2949, 2259, 1815, 2305, 255, 1251, 2184, 1001, 606, 709, 1771, 284, 991, 1501, 2882, 954, 452, 2685, 1558, 910, 1944, 432, 2467, 672, 1073, 1606, 402, 383, 2877, 2146, 2339, 2451, 2904, 2216, 755, 985, 337, 814, 731, 2760, 944, 2185, 1396, 2852, 2047, 439, 2292, 1661, 2696, 133, 2343, 2273, 2711, 565, 847, 1461, 2246, 424, 2544, 1542, 795, 3016, 2676, 544, 1464, 632, 2319, 910, 2005, 1604, 1135, 1990, 125, 1743, 1753, 207, 179, 2345, 2467, 842, 1642, 561, 3080, 2123, 559, 1091, 673, 2894, 2617, 1307, 952, 1619, 2843, 488, 117, 492, 883, 822, 1883, 350, 1663, 2302, 159, 2317, 2632, 1911, 2580, 2424, 1615, 1334, 2782, 2553, 2902, 438, 2489, 1742, 2076, 3022, 2320, 1868, 2138, 2292, 204, 386, 3053, 2587, 1067, 1000, 1772, 1621, 853, 2337, 827, 1054, 2221, 1637, 528, 2761, 1487, 2776, 900, 863, 2207, 1733, 353, 2860, 2958, 2485, 1866, 809, 2401, 94, 2686, 769, 1351, 807, 1831, 236, 165, 2177, 2931, 1527, 402, 915, 2850, 1385, 39, 2790, 1141, 235, 2378, 2355, 2715, 1892, 1542, 3003, 730, 175, 350, 2629, 2607, 819, 1093, 3092, 1993, 380, 2931, 3062, 519, 80, 2677, 514, 1046, 2819, 2375, 2778, 1789, 980, 1538, 2535, 2182, 1341, 2010, 1178, 2067, 2656, 1634, 969, 2398, 1453, 1498, 1757, 2902, 2706, 404, 106, 1556, 2247, 2059, 1880, 1548, 2680, 1194, 1783, 2538, 297, 1437, 1929, 123, 1840, 198, 2659, 2891, 225, 1453, 1089, 1311, 940, 1466, 1748, 1524, 2275, 1735, 1031, 168, 1891, 797, 1948, 461, 2758, 1405, 2498, 2972, 62, 96, 606, 2015, 2205, 824, 3096, 1875, 2967, 1679, 140, 2867, 2249, 1142, 1146, 245, 1425, 1487, 7, 1413, 1725, 1173, 381, 1522, 650, 2937, 1015, 767, 2479, 2644, 1822, 1009, 2668, 465, 3077, 2397, 2664, 2977, 2173, 1767, 417, 719, 689, 2028, 2787, 2538, 2359, 1214, 1902, 2279, 2, 344, 2880, 2006, 1928, 1865, 638, 2748, 2951, 974, 2846, 2423, 1954, 401, 363, 1527, 319, 723, 1545, 2835, 1115, 566, 819, 2511, 1392, 1492, 966, 2991, 1842, 2432, 2464, 558, 617, 2386, 2686, 916, 1810, 342, 637, 2992, 910, 2910, 1802, 2244, 2257, 2544, 2802, 1325, 684, 351, 1605, 2294, 205, 1285, 642, 3089, 922, 2608, 1418, 2446, 2957, 442, 1775, 3082, 497, 1910, 2495, 216, 2867, 466, 3021, 2024, 2245, 2514, 1956, 3003, 977, 528, 1597, 668, 1835, 1663, 2238, 2172, 459, 286, 2494, 823, 2114, 1914, 3057, 1122, 1256, 386, 2411, 2049, 1313, 1815, 2363, 1398, 2005, 554, 1159, 177, 2130, 3055, 268, 1137, 2740, 2739, 459, 2170, 343, 463, 2236, 1812, 1691, 1545, 461, 2737, 2684, 1855, 2584, 1578, 794, 3068, 940, 1139, 3106, 1472, 1783, 2459, 318, 1805, 155, 162, 1184, 3071, 3044, 3101, 1469, 1722, 3024, 1320, 1528, 93, 853, 2506, 874, 875, 2839, 802, 2738, 2547, 799, 422, 2905, 2043, 2039, 2129, 1953, 822, 1778, 752, 758, 2864, 1426, 196, 563, 252, 3091, 2405, 202, 2513, 2221, 2285, 1126, 2263, 601, 2984, 2884, 2085, 1275, 1162, 1850, 823, 1297, 31, 1422, 1252, 664, 1855, 1619, 1073, 773, 22, 2514, 2471, 686, 2006, 2691, 1646, 1142, 1820, 2509, 609, 2391, 235, 2436, 1515, 667, 1391, 1092, 766, 1000, 1429, 1094, 455, 2753, 1237, 2270, 1491, 107, 816, 1408, 462, 1906, 2015, 1519, 383, 2527, 831, 2718, 1208, 2604, 1, 3, 2802, 455, 521, 1667, 3053, 1600, 669, 3069, 2815, 2892, 1622, 2937, 1745, 2706, 2816, 2021, 2193, 2858, 715, 53, 424, 685, 1525, 2444, 2322, 2562, 1322, 352, 2758, 41, 1089, 158, 1462, 1949, 516, 2828, 2958, 1574, 1174, 2002, 2461, 449, 1851, 63, 1078, 187, 640, 1140, 2787, 2207, 1394, 2284, 848, 1787, 1039, 1777, 2939, 113, 1873, 1630, 1029, 134, 1401, 1642, 1220, 2935, 962, 67, 1410, 417, 1225, 2444, 1880, 2771, 1546, 1922, 2073, 993, 1925, 760, 826, 2943, 2101, 283, 2753, 2562, 545, 1151, 1566, 1313, 246, 1226, 2391, 333, 374, 1458, 2922, 2382, 1776, 781, 1061, 2195, 2407, 1680, 1772, 1518, 2042, 333, 1411, 2444, 1022, 932, 1211, 2884, 3030, 1493, 3100, 2281, 1456, 1964, 2514, 321};
    int n = 1472, maxSum = 2936;
    Solution s1;
    cout << s1.maxCount(banned, n, maxSum);
    return 0;
}